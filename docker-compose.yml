version: '3'
services:
  fastapi:
    build:
      context: ./api
    ports:
      - "8000:8000"
    depends_on:
      - redis
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}

  streamlit:
    build:
      context: ./api
    command: ["streamlit", "run", "streamlit_app.py"]
    ports:
      - "8501:8501"
    depends_on:
      - fastapi

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  webserver:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    entrypoint: /bin/bash
    command: >
      -c "airflow db upgrade && airflow db init && airflow users create --role Admin --username admin --email admin@example.com --firstname admin --lastname user --password admin && airflow webserver"

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - webserver
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: scheduler


volumes:
  postgres_data: